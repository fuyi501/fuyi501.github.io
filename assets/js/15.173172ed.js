(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{774:function(t,n,a){"use strict";a.r(n);var s=a(104),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-使用-nginx-rtmp-module-搭建-rtmp-hls-流媒体服务器"}},[t._v("1. 使用 nginx-rtmp-module 搭建 RTMP + HLS 流媒体服务器 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用-nginx-rtmp-module-搭建-rtmp-hls-流媒体服务器"}},[t._v("#")])]),t._v(" "),a("h3",{attrs:{id:"_1-最简单方式安装"}},[t._v("（1） 最简单方式安装 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_1-最简单方式安装"}},[t._v("#")])]),t._v(" "),a("p",[t._v("我们使用 Nginx 作为视频流服务器，那么必须需要 Nginx 支持视频流，这里就需要安装 "),a("code",[t._v("nginx-rtmp-module")]),t._v(" 模块了，"),a("code",[t._v("libnginx-mod-rtmp")]),t._v(" 是 "),a("code",[t._v("nginx-rtmp-module")]),t._v(" 模块在 ubuntu 库中的名称，这个模块在 ubuntu 18.04 上是自带的，可以通过 "),a("code",[t._v("apt-get install libnginx-mod-rtmp")]),t._v(" 进行安装，但是在 ubuntu 16.04 上如果想要安装，直接下载 "),a("code",[t._v("libnginx-mod-rtmp_1.14.0-0+xenial1_amd64.deb")]),t._v(" 安装的话会被告知 "),a("code",[t._v("nginx")]),t._v(" 版本过低，依赖有问题，16.04自带的nginx版本是1.10，而rtmp需要1.14版本。")]),t._v(" "),a("p",[t._v("安装 "),a("code",[t._v("nginx-rtmp-module")]),t._v(" 模块大部分都是编译 nginx 和 nginx-rtmp-module 来安装的，如果你不想编译安装，可以通过升级 nginx 到 1.14 版本，然后再使用 "),a("code",[t._v("apt-get install libnginx-mod-rtmp")]),t._v(" 命令安装 "),a("code",[t._v("libnginx-mod-rtmp")]),t._v(" 就可以了。")]),t._v(" "),a("p",[a("strong",[t._v("1. 升级nginx到1.14")])]),t._v(" "),a("p",[t._v("依次运行如下命令：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo apt-get install software-properties-common python-software-properties\nsudo add-apt-repository ppa:nginx/stable\nsudo apt-get update\nsudo apt-get install nginx\n")])])]),a("p",[a("strong",[t._v("2. 安装libnginx-mod-rtmp")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo apt-get install libnginx-mod-rtmp\n")])])]),a("p",[t._v("这样就成功在Ubuntu 16.04上安装了 "),a("code",[t._v("libnginx-mod-rtmp")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_2-编译安装-nginx-rtmp-module"}},[t._v("（2） 编译安装 nginx-rtmp-module "),a("a",{staticClass:"header-anchor",attrs:{href:"#_2-编译安装-nginx-rtmp-module"}},[t._v("#")])]),t._v(" "),a("p",[a("strong",[t._v("1. 下载 nginx-rtmp-module：")])]),t._v(" "),a("p",[t._v("nginx-rtmp-module 的官方 github 地址：https://github.com/arut/nginx-rtmp-module.git")]),t._v(" "),a("p",[a("strong",[t._v("2. 编译安装 Nginx")])]),t._v(" "),a("p",[t._v("nginx 的官方网站为：http://nginx.org/en/download.html")]),t._v(" "),a("p",[t._v("本文使用的是 "),a("code",[t._v("nginx-1.14.2")]),t._v("，安装 Nginx 需要依赖其它第三方库，需要先下载编译好：")]),t._v(" "),a("p",[a("strong",[t._v("(1) zlib库")])]),t._v(" "),a("p",[t._v("官网地址为：http://www.zlib.net/ ，本文采用的版本为 "),a("code",[t._v("zlib-1.2.11")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wget http://www.zlib.net/zlib-1.2.11.tar.gz\ntar xf zlib-1.2.11.tar.gz\ncd zlib-1.2.11\n./configure\nmake && make install\n")])])]),a("p",[a("strong",[t._v("(2) openssl库")])]),t._v(" "),a("p",[t._v("官网下载地址：https://www.openssl.org/source/ ，本文使用的版本："),a("code",[t._v("openssl-1.1.0j")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wget https://www.openssl.org/source/openssl-1.1.0j.tar.gz\ntar xf openssl-1.1.0j.tar.gz\ncd openssl-1.1.0j\n./config\nmake && make install\n")])])]),a("p",[a("strong",[t._v("(3) pcre库")])]),t._v(" "),a("p",[t._v("官网下载地址：ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/ ，本文使用的版本："),a("code",[t._v("pcre-8.38")]),t._v("。\n"),a("strong",[t._v("注意：pcre 库建议不要使用 pcre2 系列的版本，会导致 Nginx 编译报错的问题。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.bz2\ntar xf pcre-8.38.tar.bz2\ncd pcre-8.38\n./configure\nmake && make install\n")])])]),a("p",[a("strong",[t._v("(4) 编译安装Nginx")])]),t._v(" "),a("p",[t._v("官网下载地址：http://nginx.org/en/download.html ，本文采用的版本为："),a("code",[t._v("nginx-1.14.2")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wget http://nginx.org/download/nginx-nginx-1.14.2.tar.gz\ntar xf nginx-nginx-1.14.2.tar.gz\ncd nginx-nginx-1.14.2\n./configure --prefix=/usr/local/nginx --add-module=../nginx-rtmp-module --with-http_ssl_module  --with-pcre=../pcre-8.38 --with-openssl=../openssl-1.1.0j --with-zlib=../zlib-1.2.11\nmake && make install\n")])])]),a("p",[t._v("执行完以上步骤，如果不出错误的话，Nginx 编译出来会生成到 "),a("code",[t._v("/usr/local/nginx")]),t._v(" 目录。")]),t._v(" "),a("p",[a("strong",[t._v("最后启动nginx:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd /usr/local/nginx/\nsbin/nginx -c conf/nginx.conf\n或者\n/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n")])])]),a("h2",{attrs:{id:"_2-使用-nginx-http-flv-module-搭建-rtmp-http-flv-流媒体服务器"}},[t._v("2. 使用 nginx-http-flv-module 搭建 RTMP + HTTP-FLV 流媒体服务器 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-nginx-http-flv-module-搭建-rtmp-http-flv-流媒体服务器"}},[t._v("#")])]),t._v(" "),a("p",[t._v("编译安装方法和编译安装 nginx-rtmp-module 相似，只不过 nginx-http-flv-module 模块和 nginx-rtmp-module 模块不能一起使用，安装 nginx-http-flv-module 模块时先把 nginx-rtmp-module 卸载了，最后的编译命令如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./configure --prefix=/usr/local/nginx --add-module=../nginx-http-flv-module-master --with-http_ssl_module  --with-pcre=../pcre-8.38 --with-openssl=../openssl-1.1.0j --with-zlib=../zlib-1.2.11\n")])])]),a("h2",{attrs:{id:"_3-推流和播放测试"}},[t._v("3. 推流和播放测试 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_3-推流和播放测试"}},[t._v("#")])]),t._v(" "),a("p",[t._v("打开 "),a("code",[t._v("nginx.conf")]),t._v(" 配置文件，在最下面添加如下配置：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("rtmp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    out_queue     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(";\n    out_cork         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(";\n    max_streams    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v(";\n    timeout        15s;\n\n    server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1935")]),t._v(";\n\t    chunk_size "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(";\n\n        application live "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            live on;\n            max_connections "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(";\n            gop_cache on;\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n        application hls "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            live on;\n            hls on;  \n            hls_path /etc/nginx/temp/hls; "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的路径要写成你的路径，用来存放 hls 视频片段，如果没有这个目录需要自己新建，而且必须是绝对路径，否则可能会获取不到视频数据")]),t._v("\n            hls_fragment 5s; \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("配置写好之后，重启 Nginx 服务器：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo nginx -s reload\n")])])]),a("p",[t._v("现在我们的视频流服务器就搭建好了，我们来测试一下。")]),t._v(" "),a("p",[t._v("这里先说明下我的视频流服务器地址是："),a("code",[t._v("192.168.9.12")]),t._v("；\n原始视频流是海康的摄像头，地址是："),a("code",[t._v("rtsp://admin:123456@192.168.9.33:554/Streaming/Channels/101")])]),t._v(" "),a("p",[t._v("原视频流 rtsp 播放测试：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.fuwenwei.com/blog/rtsp%E6%92%AD%E6%94%BE2.png",alt:""}})]),t._v(" "),a("p",[t._v("如果没有原始视频流地址，可以使用 MP4 等视频文件进行推流。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-使用-rtmp-播放"}},[t._v("3.1 使用 RTMP 播放 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-使用-rtmp-播放"}},[t._v("#")])]),t._v(" "),a("p",[t._v("我使用 ffmpeg 进行推流，推流命令写成：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ffmpeg -i rtsp://admin:123456@192.168.9.33:554/Streaming/Channels/101 -f mp4 -vcodec copy -r 25 -s 1920*1080 -b:v 1024000 -an -f flv -an rtmp://192.168.9.12:1935/live/stream\n")])])]),a("p",[t._v("这里重点注意推流的地址："),a("code",[t._v("rtmp://192.168.9.12:1935/live/stream")]),t._v("，其中的 "),a("code",[t._v("live")]),t._v(" 要和你的配置文件中 "),a("code",[t._v("live")]),t._v(" 相对应，后面的 "),a("code",[t._v("stream")]),t._v(" 可以随便写，这样你就可以使用播放器进行播放了，比如使用 vlc 进行播放，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.fuwenwei.com/blog/rtmp%E6%92%AD%E6%94%BE.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_3-2-使用-hls-播放"}},[t._v("3.2 使用 HLS 播放 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-使用-hls-播放"}},[t._v("#")])]),t._v(" "),a("p",[t._v("如果你想使用 hls 来播放视频，还需要在 "),a("code",[t._v("nginx.conf")]),t._v(" 配置文件中的 "),a("code",[t._v("http")]),t._v(" 模块中添加一个 "),a("code",[t._v("server")]),t._v("，这里我们监听 "),a("code",[t._v("8080")]),t._v(" 端口，如下所示：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(";\n    server_name  localhost;\n\n    location /hls "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        #server hls fragments  \n        types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n            application/vnd.apple.mpegurl m3u8;  \n            video/mp2t ts;  \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n        #alias temp/hls;\n        root /etc/nginx/temp;  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的路径要和 rtmp 配置中的路径一致")]),t._v("\n        expires "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("-1")]),t._v(";  \n        add_header Cache-Control no-cache;\n        add_header Access-Control-Allow-Origin *;\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("配置好了之后，再次重启 Nginx 服务器。")]),t._v(" "),a("p",[t._v("这次推流命令还是上面的命令：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ffmpeg -i rtsp://admin:123456@192.168.9.33:554/Streaming/Channels/101 -f mp4 -vcodec copy -r 25 -s 1920*1080 -b:v 1024000 -an -f flv -an rtmp://192.168.9.12:1935/live/stream\n")])])]),a("p",[t._v("但是我们的播放地址改变了，我们使用 HTTP 协议播放，地址为："),a("code",[t._v("http://192.168.9.12:8080/hls/stream.m3u8")]),t._v("，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.fuwenwei.com/blog/m3u8%E6%92%AD%E6%94%BE.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_3-3-使用-http-flv-播放"}},[t._v("3.3 使用 HTTP-FLV 播放 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-使用-http-flv-播放"}},[t._v("#")])]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("HTTP-FLV")]),t._v(" 播放不需要再增加其他配置了，但是上面的两部分配置都是必须的，而且要确保你是编译安装的 "),a("code",[t._v("nginx-http-flv-module")]),t._v(" 模块。")]),t._v(" "),a("p",[t._v("根据 https://github.com/winshining/nginx-http-flv-module 中的介绍，这里的播放地址我们得写成这种格式："),a("code",[t._v("http://192.168.9.12:8080/live?app=live&stream=stream")]),t._v(" 才行，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.fuwenwei.com/blog/http-flv%E6%92%AD%E6%94%BE.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_4-注意事项"}},[t._v("4. 注意事项 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_4-注意事项"}},[t._v("#")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("rtmp 的配置必须放在 nginx 服务器的默认配置文件 nginx.conf 中，不可以自己新建一个配置文件包含进去，这样 rtmp 会不起作用。")])]),t._v(" "),a("li",[a("p",[t._v("配置文件中 "),a("code",[t._v("hls_path /etc/nginx/temp/hls;")]),t._v(" 这一项，这里的路径必须是绝对路径，否则可能会获取不到视频数据，我一开始写的 "),a("code",[t._v("./temp/hls")]),t._v("，就一直播放不出视频来，找了好久问题才发现出现在这里")])]),t._v(" "),a("li",[a("p",[t._v("如果是在阿里云或者腾讯云上安装，记得要在安全组里打开 "),a("strong",[t._v("1935")]),t._v(" 端口。")])])]),t._v(" "),a("h2",{attrs:{id:"_5-延时对比"}},[t._v("5. 延时对比 "),a("a",{staticClass:"header-anchor",attrs:{href:"#_5-延时对比"}},[t._v("#")])]),t._v(" "),a("h3",{attrs:{id:"http-flv和rtmp和rtsp播放延时对比"}},[t._v("http-flv和rtmp和rtsp播放延时对比 "),a("a",{staticClass:"header-anchor",attrs:{href:"#http-flv和rtmp和rtsp播放延时对比"}},[t._v("#")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.fuwenwei.com/blog/http-flv%E5%92%8Crtmp%E5%92%8Crtsp%E6%92%AD%E6%94%BE%E5%BB%B6%E6%97%B6%E5%AF%B9%E6%AF%94.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"hls和rtmp和rtsp播放延时对比"}},[t._v("hls和rtmp和rtsp播放延时对比 "),a("a",{staticClass:"header-anchor",attrs:{href:"#hls和rtmp和rtsp播放延时对比"}},[t._v("#")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.fuwenwei.com/blog/m3u8%E5%92%8Crtmp%E5%92%8Crtsp%E6%92%AD%E6%94%BE%E5%BB%B6%E6%97%B6%E5%AF%B9%E6%AF%94.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"http-flv和m3u8播放延时对比"}},[t._v("http-flv和m3u8播放延时对比 "),a("a",{staticClass:"header-anchor",attrs:{href:"#http-flv和m3u8播放延时对比"}},[t._v("#")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.fuwenwei.com/blog/http-flv%E5%92%8Cm3u8%E6%92%AD%E6%94%BE%E5%BB%B6%E6%97%B6%E5%AF%B9%E6%AF%94.png",alt:""}})])])}),[],!1,null,null,null);n.default=e.exports}}]);